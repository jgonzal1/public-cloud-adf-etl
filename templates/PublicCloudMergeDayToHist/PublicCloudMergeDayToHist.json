{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AzureBlobStorageLinkService": {
			"type": "string"
		},
		"stwepreporting": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PublicCloudMergeDayToHist')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy new and changed files only by using LastModifiedDate",
				"activities": [
					{
						"name": "List Clients_Filenames",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute Daily Load",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "source_filenames_list",
								"type": "DatasetReference",
								"parameters": {
									"file_name_list": "Clients_Filenames.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each CF Then Run Dataflow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Clients_Filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Clients_Filenames').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ETL merge daily load to historicals",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "PublicCloudMergeDayToHistDf",
											"type": "DataFlowReference",
											"parameters": {
												"client_name": {
													"value": "'@{item().client_name}'",
													"type": "Expression"
												},
												"table_name": {
													"value": "'@{item().table_name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"IncrementingFile": {
													"ClientName": {
														"value": "@item().client_name",
														"type": "Expression"
													},
													"OutputName": {
														"value": "@item().table_name",
														"type": "Expression"
													}
												},
												"DailyExtraction": {
													"ClientName": {
														"value": "@item().client_name",
														"type": "Expression"
													},
													"OutputName": {
														"value": "@item().table_name",
														"type": "Expression"
													}
												},
												"MergedHistoricalData": {
													"ClientName": {
														"value": "@item().client_name",
														"type": "Expression"
													},
													"OutputName": {
														"value": "@item().table_name",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute Daily Load",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PublicCloudDailyLoad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "Set Execution To False",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "execute",
							"value": "false"
						}
					}
				],
				"parameters": {
					"FolderPath_Destination": {
						"type": "String",
						"defaultValue": "publicloud"
					}
				},
				"variables": {
					"execute": {
						"type": "String",
						"defaultValue": "true"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_filenames_list')]",
				"[concat(variables('factoryId'), '/pipelines/PublicCloudDailyLoad')]",
				"[concat(variables('factoryId'), '/dataflows/PublicCloudMergeDayToHistDf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_filenames_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorageLinkService')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name_list": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name_list",
							"type": "Expression"
						},
						"container": "publicloud"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PublicCloudDailyLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "List FileNames Comma NoH",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "source_filenames_list",
								"type": "DatasetReference",
								"parameters": {
									"file_name_list": "FileNames_Comma_NoH.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Filename Comma NoH",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List FileNames Comma NoH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List FileNames Comma NoH').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy FileName Comma NoH",
									"description": "Hace un merge de todos los d√≠as y limpia los datos.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat( item().client_abr ,'-', item().TableName, '-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_comma",
											"type": "DatasetReference",
											"parameters": {
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": {
													"value": "@concat('Staging_',item().TableName, '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "List FileNames Comma SkipLine",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "source_filenames_list",
								"type": "DatasetReference",
								"parameters": {
									"file_name_list": "FileNames_Comma_SkipLine.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Filename Comma SkipLine",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List FileNames Comma SkipLine",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List FileNames Comma SkipLine').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy FileName Comma SkipLine",
									"description": "Hace un merge de todos los d√≠as y limpia los datos.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-5))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat( item().ClientAbr ,'-', item().TableName, '-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_comma_header_iterative",
											"type": "DatasetReference",
											"parameters": {
												"client_name": {
													"value": "@item().ClientName",
													"type": "Expression"
												},
												"source_file_name": "''"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().ClientName",
													"type": "Expression"
												},
												"OutputName": {
													"value": "@concat('Staging_',item().TableName, '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "List FileNames Thorn NoH",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "source_filenames_list",
								"type": "DatasetReference",
								"parameters": {
									"file_name_list": "FileNames_Thorn_NoH.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Filename Thorn NoH",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List FileNames Thorn NoH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List FileNames Thorn NoH').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy FileName Thorn NoH",
									"description": "Hace un merge de todos los d√≠as y limpia los datos.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat( item().client_abr ,'-', item().TableName, '-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 0
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_thorn",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": {
													"value": "@concat('Staging_',item().TableName, '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "List Clients",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "source_filenames_list",
								"type": "DatasetReference",
								"parameters": {
									"file_name_list": "Clients.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Client Then Copy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Clients",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Clients').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Seguridad SecurityRecomendations",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@adddays(utcnow('yyyy-MM-dd'),-1)",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false,
												"prefix": {
													"value": "@{concat(item().client_abr,'-SecurityRecomendations')}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"ordinal": 1
													},
													"sink": {
														"name": "ImpactedValue",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 2
													},
													"sink": {
														"name": "Impact",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 3
													},
													"sink": {
														"name": "ImpactField"
													}
												},
												{
													"source": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 4
													},
													"sink": {
														"name": "Risk"
													}
												},
												{
													"source": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 5
													},
													"sink": {
														"name": "ShortDescription"
													}
												},
												{
													"source": {
														"name": "FilePath",
														"type": "String"
													},
													"sink": {
														"name": "FilePath",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_comma_iterative",
											"type": "DatasetReference",
											"parameters": {
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_SecurityRecomendations.csv"
											}
										}
									]
								},
								{
									"name": "Copy HADR ASRServers",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@adddays(utcnow('yyyy-MM-dd'),-1)",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false,
												"prefix": {
													"value": "@{concat(item().client_abr,'-ASRServers')}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													},
													"sink": {
														"name": "Prop_0",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "FilePath",
														"type": "String"
													},
													"sink": {
														"name": "FilePath",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "hadr_asr_servers_d_i",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_ASRServers.csv"
											}
										}
									]
								},
								{
									"name": "Copy Arquitectura WafExclusions",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr, '-WafExclusions-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_thorn_iterative",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_WafExclusions.csv"
											}
										}
									]
								},
								{
									"name": "Copy Arquitectura FirewallsRules",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{'solvia'}//"
										},
										{
											"name": "Destination",
											"value": "publicloud/@{'solvia'}/@{'FirewallsRules.csv'}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-FirewallsRules-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "source_thorn_iterative",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_FirewallsRules.csv"
											}
										}
									]
								},
								{
									"name": "Copy Arquitectura VnetworkInfo",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-VnetworkInfo-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_colon_iterative",
											"type": "DatasetReference",
											"parameters": {
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_VnetworkInfo.csv"
											}
										}
									]
								},
								{
									"name": "Copy Arquitectura VMInternalIP",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-VMInternalIP-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_thorn_iterative",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_VMInternalIP.csv"
											}
										}
									]
								},
								{
									"name": "Copy Capacidad ExpressRoute",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-ExpressRoute-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 0
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "capacidad_express_route_10d_i",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_ExpressRoute.csv"
											}
										}
									]
								},
								{
									"name": "Copy Capacidad TrafficVPN",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-TrafficVPN-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 0
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_thorn_iterative",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_TrafficVPN.csv"
											}
										}
									]
								},
								{
									"name": "Copy CostControl DBSQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-DBSQL-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 2
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_thorn_iterative",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_DBSQL.csv"
											}
										}
									]
								},
								{
									"name": "Copy CostControl ServersWithAutoStop",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-ServersWithAutoStop-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_thorn_iterative",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_ServersWithAutoStop.csv"
											}
										}
									]
								},
								{
									"name": "Copy Governance ManagedBy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-ManagedBy-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_thorn_iterative",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_ManagedBy.csv"
											}
										}
									]
								},
								{
									"name": "Copy Governance OperationalExcellence",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-OperationalExcellence-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_thorn_iterative",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_OperationalExcellence.csv"
											}
										}
									]
								},
								{
									"name": "Copy HADR BackupFailed",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-BackupFailed-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "FilePath",
														"type": "String"
													},
													"sink": {
														"name": "FilePath",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "BackupItemUniqueId_s",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "BackupItemUniqueId"
													}
												},
												{
													"source": {
														"name": "_ResourceId",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ResourceId"
													}
												},
												{
													"source": {
														"name": "AggregatedValue",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "AggregatedValue"
													}
												},
												{
													"source": {
														"name": "TimeGenerated",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Timestamp"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_comma_header_iterative",
											"type": "DatasetReference",
											"parameters": {
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"source_file_name": "BackupFailed"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_BackupFailed.csv"
											}
										}
									]
								},
								{
									"name": "Copy HADR BackupsSQLServer",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-BackupsSQLServer-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "hadr_backups_sql_server_d_i",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client_abr": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_BackupsSQLServer.csv"
											}
										}
									]
								},
								{
									"name": "Copy HADR BackupsVM",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-BackupsVM-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 2
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "hadr_backups_vm_10d_i",
											"type": "DatasetReference",
											"parameters": {
												"current_date": "@utcNow('yyyy-MM-dd')",
												"client_abr": {
													"value": "@item().client_abr",
													"type": "Expression"
												},
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_BackupsVM.csv"
											}
										}
									]
								},
								{
									"name": "Copy HADR HighAvailabilityRecomendation",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-HighAvailabilityRecomendations-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_colon_iterative",
											"type": "DatasetReference",
											"parameters": {
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"client": {
													"value": "@item().client_abr",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_HighAvailabilityRecomendations.csv"
											}
										}
									]
								},
								{
									"name": "Copy Seguridad UpdateNeeded",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-UpdateNeeded-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_comma_iterative",
											"type": "DatasetReference",
											"parameters": {
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_UpdateNeeded.csv"
											}
										}
									]
								},
								{
									"name": "Copy Seguridad VMPublicIP",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat(item().client_abr,'-VMPublicIP-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_comma_iterative",
											"type": "DatasetReference",
											"parameters": {
												"client_name": {
													"value": "@item().client_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().client_name",
													"type": "Expression"
												},
												"OutputName": "Staging_VMPublicIP.csv"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "For Each Client Then Run Dataflow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Clients",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Clients').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ETL CostControl DiskSpace",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "cost_control_disk_space_data_flow",
											"type": "DataFlowReference",
											"parameters": {
												"client_abr": {
													"value": "'@{item().client_abr}'",
													"type": "Expression"
												},
												"client_name": {
													"value": "'@{item().client_name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"CostControlDiskSpaceI1": {
													"current_date": "@utcNow('yyyy-MM-dd')",
													"client": "SLV",
													"client_name": "solvia"
												},
												"CostControlDiskSpaceI2": {
													"current_date": "@utcNow('yyyy-MM-dd')",
													"client": "SLV",
													"client_name": "solvia"
												},
												"CostControlDiskSpaceO": {
													"ClientName": "solvia"
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "ETL Capacidad StorageAccountPolicy",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "ClientName",
											"value": "solvia"
										}
									],
									"typeProperties": {
										"dataflow": {
											"referenceName": "capacidad_storage_account_policy_data_flow",
											"type": "DataFlowReference",
											"parameters": {
												"client_abr": {
													"value": "'@{item().client_abr}'",
													"type": "Expression"
												},
												"client_name": {
													"value": "'@{item().client_name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"CapacidadStorageAccountPolicyI": {
													"current_date": "@utcNow('yyyy-MM-dd')",
													"client": "SLV",
													"client_name": "solvia"
												},
												"CapacidadStorageAccountPolicyO": {
													"ClientName": "solvia"
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "ETL Governance TotalTags",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "ClientName",
											"value": "solvia"
										}
									],
									"typeProperties": {
										"dataflow": {
											"referenceName": "governance_total_tags_data_flow",
											"type": "DataFlowReference",
											"parameters": {
												"client_name": {
													"value": "'@{item().client_name}'",
													"type": "Expression"
												},
												"client_abr": {
													"value": "'@{item().client_abr}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"GovTotTagsI": {
													"current_date": "@utcNow('yyyy-MM-dd')",
													"client": "SLV",
													"client_name": "solvia"
												},
												"GovTotTagsO": {
													"ClientName": "solvia"
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "ETL CostControl CostAcumulated",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "ClientName",
											"value": "solvia"
										}
									],
									"typeProperties": {
										"dataflow": {
											"referenceName": "cost_control_cost_acumulated_data_flow",
											"type": "DataFlowReference",
											"parameters": {
												"client_abr": {
													"value": "'@{item().client_abr}'",
													"type": "Expression"
												},
												"client_name": {
													"value": "'@{item().client_name}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"CostControlCostAcumulatedI": {
													"current_date": "@utcNow('yyyy-MM-dd')",
													"client": "SLV",
													"client_name": "solvia"
												},
												"CostControlCostAcumulatedO": {
													"ClientName": "solvia"
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					},
					{
						"name": "For Each Filename Comma SkipLine 30d",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List FileNames Comma SkipLine 30d",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List FileNames Comma SkipLine 30d').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy FileName Comma SkipLine 30d",
									"description": "Hace un merge de todos los d√≠as y limpia los datos.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "FilePath",
													"value": "$$FILEPATH"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"modifiedDatetimeStart": {
													"value": "@formatDateTime(addDays(utcnow('yyyy-MM-dd'),-1))",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@concat( item().ClientAbr ,'-', item().TableName, '-*.csv')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": 1
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "source_comma_header_iterative",
											"type": "DatasetReference",
											"parameters": {
												"client_name": {
													"value": "@item().ClientName",
													"type": "Expression"
												},
												"source_file_name": "''"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sink_public_cloud",
											"type": "DatasetReference",
											"parameters": {
												"ClientName": {
													"value": "@item().ClientName",
													"type": "Expression"
												},
												"OutputName": {
													"value": "@concat('Staging_',item().TableName, '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "List FileNames Comma SkipLine 30d",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "source_filenames_list",
								"type": "DatasetReference",
								"parameters": {
									"file_name_list": "FileNames_Comma_SkipLine_30d.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Execution To False",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "execution_flag",
							"value": "false"
						}
					}
				],
				"variables": {
					"execution_flag": {
						"type": "String",
						"defaultValue": "true"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_filenames_list')]",
				"[concat(variables('factoryId'), '/datasets/source_comma')]",
				"[concat(variables('factoryId'), '/datasets/sink_public_cloud')]",
				"[concat(variables('factoryId'), '/datasets/source_comma_header_iterative')]",
				"[concat(variables('factoryId'), '/datasets/source_thorn')]",
				"[concat(variables('factoryId'), '/datasets/source_comma_iterative')]",
				"[concat(variables('factoryId'), '/datasets/hadr_asr_servers_d_i')]",
				"[concat(variables('factoryId'), '/datasets/source_thorn_iterative')]",
				"[concat(variables('factoryId'), '/datasets/source_colon_iterative')]",
				"[concat(variables('factoryId'), '/datasets/capacidad_express_route_10d_i')]",
				"[concat(variables('factoryId'), '/datasets/hadr_backups_sql_server_d_i')]",
				"[concat(variables('factoryId'), '/datasets/hadr_backups_vm_10d_i')]",
				"[concat(variables('factoryId'), '/dataflows/cost_control_disk_space_data_flow')]",
				"[concat(variables('factoryId'), '/dataflows/capacidad_storage_account_policy_data_flow')]",
				"[concat(variables('factoryId'), '/dataflows/governance_total_tags_data_flow')]",
				"[concat(variables('factoryId'), '/dataflows/cost_control_cost_acumulated_data_flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PublicCloudMergeDayToHistDf')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sink_public_cloud_inc",
								"type": "DatasetReference"
							},
							"name": "IncrementingFile"
						},
						{
							"dataset": {
								"referenceName": "sink_public_cloud_inc",
								"type": "DatasetReference"
							},
							"name": "DailyExtraction"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sink_public_cloud_pbi",
								"type": "DatasetReference"
							},
							"name": "MergedHistoricalData"
						}
					],
					"transformations": [
						{
							"name": "Union"
						}
					],
					"script": "parameters{\n\tclient_name as string,\n\ttable_name as string\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:[(concat($client_name,\"/\",$table_name,\".csv\"))]) ~> IncrementingFile\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpurgeFiles: true,\n\twildcardPaths:[(concat($client_name,\"/Staging_\",$table_name,\".csv\"))]) ~> DailyExtraction\nIncrementingFile, DailyExtraction union(byName: true)~> Union\nUnion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat($table_name,\".csv\"))],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MergedHistoricalData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sink_public_cloud_inc')]",
				"[concat(variables('factoryId'), '/datasets/sink_public_cloud_pbi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_public_cloud_inc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorageLinkService')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ClientName": {
						"type": "string",
						"defaultValue": "solvia"
					},
					"OutputName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().OutputName,'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().ClientName",
							"type": "Expression"
						},
						"container": "publicloud"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_public_cloud_pbi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorageLinkService')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ClientName": {
						"type": "string",
						"defaultValue": "solvia"
					},
					"OutputName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().ClientName",
							"type": "Expression"
						},
						"container": "publicloud"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_comma')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					},
					"client": {
						"type": "string",
						"defaultValue": "SLV"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_public_cloud')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorageLinkService')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ClientName": {
						"type": "string",
						"defaultValue": "solvia"
					},
					"OutputName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().OutputName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().ClientName",
							"type": "Expression"
						},
						"container": "publicloud"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_comma_header_iterative')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					},
					"source_file_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\"",
					"skipLineCount": 1
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_thorn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"current_date": {
						"type": "String",
						"defaultValue": "@utcNow('yyyy-MM-dd')"
					},
					"client": {
						"type": "String",
						"defaultValue": "SLV"
					},
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": "√æ",
					"encodingName": "UTF-16",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "col1",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_comma_iterative')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hadr_asr_servers_d_i')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"current_date": {
						"type": "String",
						"defaultValue": "@utcNow('yyyy-MM-dd')"
					},
					"client": {
						"type": "String",
						"defaultValue": "SLV"
					},
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": "√æ",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "col1",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_thorn_iterative')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"current_date": {
						"type": "String",
						"defaultValue": "@utcNow('yyyy-MM-dd')"
					},
					"client": {
						"type": "String",
						"defaultValue": "SLV"
					},
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": "√æ",
					"encodingName": "UTF-16",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "col1",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_colon_iterative')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					},
					"client": {
						"type": "string",
						"defaultValue": "SLV"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ":",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/capacidad_express_route_10d_i')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"current_date": {
						"type": "String",
						"defaultValue": "@utcNow('yyyy-MM-dd')"
					},
					"client": {
						"type": "String",
						"defaultValue": "SLV"
					},
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": "√æ",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "col1",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hadr_backups_sql_server_d_i')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"current_date": {
						"type": "String",
						"defaultValue": "@utcNow('yyyy-MM-dd')"
					},
					"client_abr": {
						"type": "String",
						"defaultValue": "SLV"
					},
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().client_abr,'-BackupsSQLServer-',utcnow('yyyy-MM-dd'),'.csv')",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": "√æ",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "col1",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hadr_backups_vm_10d_i')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('stwepreporting')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"current_date": {
						"type": "String",
						"defaultValue": "@utcNow('yyyy-MM-dd')"
					},
					"client_abr": {
						"type": "String",
						"defaultValue": "SLV"
					},
					"client_name": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().client_abr,'-BackupsVM-',utcnow('yyyy-MM-dd'),'.csv')",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().client_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cost_control_disk_space_data_flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PublicCloudDailyLoad"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "source_thorn_iterative",
								"type": "DatasetReference"
							},
							"name": "CostControlDiskSpaceI1"
						},
						{
							"dataset": {
								"referenceName": "source_thorn_iterative",
								"type": "DatasetReference"
							},
							"name": "CostControlDiskSpaceI2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "cost_control_disk_space_o",
								"type": "DatasetReference"
							},
							"name": "CostControlDiskSpaceO"
						}
					],
					"transformations": [
						{
							"name": "CommaDelimLogsI1"
						},
						{
							"name": "CommaDelimLogsI2"
						},
						{
							"name": "ConditionalSplit2"
						},
						{
							"name": "SelectSecondPart"
						},
						{
							"name": "SelectFirstPart"
						},
						{
							"name": "Union"
						},
						{
							"name": "OnlyPayloadFilter"
						},
						{
							"name": "CompDsDelim"
						},
						{
							"name": "Select"
						}
					],
					"script": "parameters{\n\tclient_abr as string,\n\tclient_name as string\n}\nsource(output(\n\t\tcol1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'Filename',\n\tmodifiedAfter: (addDays(currentTimestamp(),-1)),\n\twildcardPaths:[(concat( $client_abr ,\"-DiskSpace-*.csv\"))]) ~> CostControlDiskSpaceI1\nsource(output(\n\t\tcol1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'Filename',\n\tmodifiedAfter: (addDays(currentTimestamp(),-1)),\n\twildcardPaths:[(concat( $client_abr ,\"-DiskSpace-*.csv\"))]) ~> CostControlDiskSpaceI2\nCostControlDiskSpaceI1 derive(col2 = iif(\r\n    locate(\",\",col1)>0,\r\n    left(col1,locate(\",\",col1)),\r\n    col1\r\n),\n\t\t{Date modified} = substring(Filename,16,10)) ~> CommaDelimLogsI1\nCostControlDiskSpaceI2 derive(col2 = iif(\r\n    locate(\",\",col1)>0,\r\n    substring(col1,locate(\",\",col1)+2),\r\n    \"\"\r\n),\n\t\t{Date modified} = substring(Filename,16,10)) ~> CommaDelimLogsI2\nCommaDelimLogsI2 split(col2!='',\n\tdisjoint: false) ~> ConditionalSplit2@(DoubleLog, UniqueLog)\nConditionalSplit2@DoubleLog select(mapColumn(\n\t\tDiskSpaceColumns = col2,\n\t\t{Date modified}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSecondPart\nCommaDelimLogsI1 select(mapColumn(\n\t\tDiskSpaceColumns = col2,\n\t\t{Date modified}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFirstPart\nSelectFirstPart, SelectSecondPart union(byName: true)~> Union\nUnion filter(iif(\r\n    left(DiskSpaceColumns,1)=='@',\r\n    true(),\r\n    iif(\r\n        substring(DiskSpaceColumns,2,1)=='@',\r\n        true(),\r\n        false()\r\n    )\r\n)) ~> OnlyPayloadFilter\nOnlyPayloadFilter derive(Computer = left(DiskSpaceColumns,locate(\";\",DiskSpaceColumns)-1),\n\t\tDiskSpace = regexExtract(\r\n    substring(\r\n        DiskSpaceColumns,\r\n        locate(\";\",DiskSpaceColumns)+2\r\n    ),\r\n    `(\\d+\\.?\\d{0,})`,\r\n    1\r\n)) ~> CompDsDelim\nCompDsDelim select(mapColumn(\n\t\t{Date modified},\n\t\tComputer,\n\t\tDiskSpace\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSelect sink(input(\n\t\t{Date modified} as string,\n\t\tComputer as string,\n\t\tDiskSpace as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Staging_DiskSpace.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CostControlDiskSpaceO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_thorn_iterative')]",
				"[concat(variables('factoryId'), '/datasets/cost_control_disk_space_o')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/capacidad_storage_account_policy_data_flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PublicCloudDailyLoad"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "source_thorn_iterative",
								"type": "DatasetReference"
							},
							"name": "CapacidadStorageAccountPolicyI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "capacidad_storage_account_policy_o",
								"type": "DatasetReference"
							},
							"name": "CapacidadStorageAccountPolicyO"
						}
					],
					"transformations": [
						{
							"name": "SpaceDelimFields"
						},
						{
							"name": "SelectPayload"
						},
						{
							"name": "OnlyPayloadFilter"
						}
					],
					"script": "parameters{\n\tclient_abr as string,\n\tclient_name as string\n}\nsource(output(\n\t\tcol1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'Filename',\n\tmodifiedAfter: (addDays(currentTimestamp(),-1)),\n\twildcardPaths:[(concat( $client_abr ,\"-StorageAccountPolicy-*.csv\"))]) ~> CapacidadStorageAccountPolicyI\nCapacidadStorageAccountPolicyI derive(StorageAccountName = left(\r\n    col1,\r\n    locate(\" \",col1)\r\n),\n\t\tRulesAndActive = regexExtract(\r\n    col1,\r\n    \" (\\\\S+ ?\\\\S+)  \",\r\n    1\r\n),\n\t\tRulesStatus = right(col1,2),\n\t\t{Date modified} = substring(Filename,27,10)) ~> SpaceDelimFields\nSpaceDelimFields select(mapColumn(\n\t\tStorageAccountName,\n\t\tRulesAndActive,\n\t\tRulesStatus,\n\t\t{Date modified}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPayload\nSelectPayload filter(iif(\r\n    length(StorageAccountName)<1,\r\n    false(),\r\n    iif(\r\n        left(StorageAccountName,1)=='-',\r\n        false(),\r\n        true()\r\n    )\r\n)) ~> OnlyPayloadFilter\nOnlyPayloadFilter sink(input(\n\t\tStorageAccountName as string,\n\t\tRulesAndActive as string,\n\t\t{Date modified} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Staging_StorageAccountPolicy.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CapacidadStorageAccountPolicyO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_thorn_iterative')]",
				"[concat(variables('factoryId'), '/datasets/capacidad_storage_account_policy_o')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/governance_total_tags_data_flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PublicCloudDailyLoad"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "source_thorn_iterative",
								"type": "DatasetReference"
							},
							"name": "GovTotTagsI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "governance_total_tags_o",
								"type": "DatasetReference"
							},
							"name": "GovTotTagsO"
						}
					],
					"transformations": [
						{
							"name": "SplitResourceAndTag"
						},
						{
							"name": "Select"
						},
						{
							"name": "FilterVoids"
						},
						{
							"name": "Aggregate"
						},
						{
							"name": "InsertRowCount"
						}
					],
					"script": "parameters{\n\tclient_name as string,\n\tclient_abr as string\n}\nsource(output(\n\t\tcol1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'FileName',\n\tmodifiedAfter: (addDays(currentTimestamp(),-1)),\n\tskipLines: 3,\n\twildcardPaths:[(concat( $client_abr ,\"-TotalTags-*.csv\"))]) ~> GovTotTagsI\nGovTotTagsI derive(Resource = rtrim(left(col1,169)),\n\t\tTags = left(substring(col1,170),locate(\"  \",substring(col1,170))),\n\t\t{Date modified} = substring(FileName,16,10)) ~> SplitResourceAndTag\nSplitResourceAndTag select(mapColumn(\n\t\t{Date modified},\n\t\tTags\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSelect filter(instr(Tags,',')>0) ~> FilterVoids\nInsertRowCount aggregate(groupBy({Date modified},\n\t\tTags),\n\tNumberOfTags = sum(IsRow)) ~> Aggregate\nFilterVoids derive(IsRow = 1) ~> InsertRowCount\nAggregate sink(input(\n\t\t{Date modified} as string,\n\t\tTags as string,\n\t\tNumberOfTags as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Staging_TotalTags.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> GovTotTagsO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_thorn_iterative')]",
				"[concat(variables('factoryId'), '/datasets/governance_total_tags_o')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cost_control_cost_acumulated_data_flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "PublicCloudDailyLoad"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "source_thorn_iterative",
								"type": "DatasetReference"
							},
							"name": "CostControlCostAcumulatedI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "control_cost_acumulated_o",
								"type": "DatasetReference"
							},
							"name": "CostControlCostAcumulatedO"
						}
					],
					"transformations": [
						{
							"name": "ParsingColumnsContents"
						},
						{
							"name": "SelectPayloadColumns"
						},
						{
							"name": "FilterPayloadRows"
						}
					],
					"script": "parameters{\n\tclient_abr as string,\n\tclient_name as string\n}\nsource(output(\n\t\tcol1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'FileName',\n\tmodifiedAfter: (addDays(currentTimestamp(),-1)),\n\twildcardPaths:[(concat( $client_abr ,\"-CostAcumulated-*.csv\"))]) ~> CostControlCostAcumulatedI\nCostControlCostAcumulatedI derive(InstanceName = left(col1,locate('  ',col1)),\n\t\tPretaxCost = regexExtract(col1,'  ([\\\\d\\\\.]+)',1),\n\t\tDate = regexExtract(FileName,'(\\\\d{4}-\\\\d\\\\d-\\\\d\\\\d)',1)) ~> ParsingColumnsContents\nParsingColumnsContents select(mapColumn(\n\t\tInstanceName,\n\t\tPretaxCost,\n\t\tDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPayloadColumns\nSelectPayloadColumns filter(length(PretaxCost)>0) ~> FilterPayloadRows\nFilterPayloadRows sink(input(\n\t\tInstanceName as string,\n\t\tPretaxCost as string,\n\t\tDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Staging_CostAcumulated.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CostControlCostAcumulatedO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_thorn_iterative')]",
				"[concat(variables('factoryId'), '/datasets/control_cost_acumulated_o')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cost_control_disk_space_o')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorageLinkService')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ClientName": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().ClientName",
							"type": "Expression"
						},
						"container": "publicloud"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date modified",
						"type": "String"
					},
					{
						"name": "Computer",
						"type": "String"
					},
					{
						"name": "DiskSpace",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/capacidad_storage_account_policy_o')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorageLinkService')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ClientName": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().ClientName",
							"type": "Expression"
						},
						"container": "publicloud"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "StorageAccountName",
						"type": "String"
					},
					{
						"name": "RulesAndActive",
						"type": "String"
					},
					{
						"name": "Date modified",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/governance_total_tags_o')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorageLinkService')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ClientName": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().ClientName",
							"type": "Expression"
						},
						"container": "publicloud"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date modified",
						"type": "String"
					},
					{
						"name": "Tags",
						"type": "String"
					},
					{
						"name": "NumberOfTags",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/control_cost_acumulated_o')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorageLinkService')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ClientName": {
						"type": "string",
						"defaultValue": "solvia"
					}
				},
				"folder": {
					"name": "PublicCloudPre"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().ClientName",
							"type": "Expression"
						},
						"container": "publicloud"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "InstanceName",
						"type": "String"
					},
					{
						"name": "PretaxCost",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}